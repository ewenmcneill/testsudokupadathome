#! /bin/sh
# Apply the local patches to a cached copy of SudokuPad
#
# Usage:
#
# applypatches CACHE_DIRECTORY [PATCH_ARGS]
#
# Test if patches apply with:
#
# applypatches CACHE_DIRECTORY --dry-run
#
# Written by Ewen McNeill <ewen@naos.co.nz>, 2023-11-18
# Updated by Ewen McNeill <ewen@naos.co.nz>, 2023-11-18
#---------------------------------------------------------------------------
#
# SPDX-License-Identifier: MIT
#
# Copyright 2023 Ewen McNeill
#
# Permission is hereby granted, free of charge, to any person
# obtaining a copy of this software and associated documentation files
# (the “Software”), to deal in the Software without restriction,
# including without limitation the rights to use, copy, modify, merge,
# publish, distribute, sublicense, and/or sell copies of the Software,
# and to permit persons to whom the Software is furnished to do so,
# subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included
# in all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED “AS IS”, WITHOUT WARRANTY OF ANY KIND,
# EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF
# MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN
# NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,
# DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR
# OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR
# THE USE OR OTHER DEALINGS IN THE SOFTWARE.
#---------------------------------------------------------------------------

BIN_DIR=$(dirname $0)
if [ -z "${BIN_DIR}" ]; then BIN_DIR="."; fi
case "${BIN_DIR}" in
  .)  BIN_DIR="$(pwd)";            ;;
  /*)                              ;;
  *)  BIN_DIR="$(pwd)/${BIN_DIR}"; ;;
esac

PATCH_DIR="${PATCH_DIR:-${BIN_DIR}/../patches}"
DEST_DIR="$1"

if [ -z "${DEST_DIR}" ]; then
  echo "Usage: $0 CACHE_DIRECTORY" >&2
  exit 1
fi

# Skip past destination directory argument
shift

# Obtain full patches to the patches to apply
PATCHES=$( ( cd "${PATCH_DIR}" && ls "$(pwd)"/*.patch) )

#echo "Found patches:"; echo "${PATCHES}"     # DEBUG

# Apply the patches in order
(
  cd "${DEST_DIR}" &&
  for PATCH in ${PATCHES}; do
    echo "Applying ${PATCH}"
    patch -p1 "$@" <"${PATCH}"
  done
)
